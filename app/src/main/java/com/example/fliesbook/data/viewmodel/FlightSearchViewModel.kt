package com.example.fliesbook.data.viewmodel

import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import com.example.fliesbook.data.dao.AirportDao
import com.example.fliesbook.data.dao.FavoriteDao
import com.example.fliesbook.data.model.Airport
import com.example.fliesbook.data.model.Favorite
import com.example.fliesbook.data.preferences.PreferencesManager
import kotlinx.coroutines.flow.MutableStateFlow
import kotlinx.coroutines.flow.StateFlow
import kotlinx.coroutines.launch

class FlightSearchViewModel(
    private val airportDao: AirportDao,
    private val favoriteDao: FavoriteDao,
    private val preferencesManager: PreferencesManager
): ViewModel() {

    private val _searchResults = MutableStateFlow<List<Airport>>(emptyList())
    val searchResults: StateFlow<List<Airport>> = _searchResults

    private val _favorites = MutableStateFlow<List<Favorite>>(emptyList())
    val favorites: StateFlow<List<Favorite>> = _favorites

    private val _searchQuery = MutableStateFlow("")
    val searchQuery: StateFlow<String?> = _searchQuery

    fun searchAirports(query: String) {
        viewModelScope.launch {
            _searchQuery.value = query
            preferencesManager.saveSearchQuery(query)
            val results = airportDao.searchAirportsByCode("%$query%")
            _searchResults.value = results
        }
    }

    fun addFavorite(departureCode: String, destinationCode: String) {
        viewModelScope.launch {
            val favorite = Favorite(
                id = 0, // Auto-generated by Room
                departureCode = departureCode,
                destinationCode = destinationCode
            )
            favoriteDao.insertFavorite(favorite)
            loadFavorites()
        }
    }

    fun loadFavorites() {
        viewModelScope.launch {
            val allFavorites = favoriteDao.getAllFavorites()
            _favorites.value = allFavorites
        }
    }

    fun deleteFavorite(favoriteId: Int) {
        viewModelScope.launch {
            favoriteDao.deleteFavoriteById(favoriteId)
            loadFavorites()
        }
    }

}